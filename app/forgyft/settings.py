"""
Django settings for forgyft project.

Generated by 'django-admin startproject' using Django 2.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from django.urls import reverse_lazy

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '***REMOVED***'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG", False)

ALLOWED_HOSTS = ["*"]

AWS_PRELOAD_METADATA = True

WAGTAIL_SITE_NAME = 'Forgift Blog'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'collectfast',
    'django.contrib.staticfiles',
    'forgyftapp',
    'social_django',
    'anymail',
    'blog',

    # Wagtail stuff below V
    'wagtail.contrib.forms',
    'wagtail.contrib.redirects',
    'wagtail.embeds',
    'wagtail.sites',
    'wagtail.users',
    'wagtail.snippets',
    'wagtail.documents',
    'wagtail.images',
    'wagtail.search',
    'wagtail.admin',
    'wagtail.core',

    'modelcluster',
    'taggit',
]

ANYMAIL = {
    "MAILGUN_API_KEY": os.getenv("MAILGUN_API_KEY"),
    "MAILGUN_SENDER_DOMAIN": "forgift.org"
}

LOGIN_URL = reverse_lazy("forgyftapp:signup")

EMAIL_BACKEND = "anymail.backends.mailgun.EmailBackend"
DEFAULT_FROM_EMAIL = "support@forgift.org"

ABSOLUTE_URI = "https://www.forgift.org"

MIDDLEWARE = [
    'bugsnag.django.middleware.BugsnagMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # Wagtail V
    'wagtail.core.middleware.SiteMiddleware',
    'wagtail.contrib.redirects.middleware.RedirectMiddleware',
]

ROOT_URLCONF = 'forgyft.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'forgyft.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

if DEBUG:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }
    COLLECTFAST_ENABLED = False
else:
    # DATABASES = {
    #     'default': {
    #         'ENGINE': 'django.db.backends.postgresql',
    #         'NAME': os.getenv("DB_NAME"),
    #         'USER': os.getenv("DB_USER"),
    #         'PASSWORD': os.getenv("DB_PASSWORD"),
    #         'HOST': os.getenv("DB_HOST"),
    #         'PORT': os.getenv("DB_PORT", 5432)
    #     }
    # }

    DATABASES = {  # Docker-compose configuration
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': "postgres",
            'USER': "postgres",
            # 'PASSWORD': os.getenv("POSTGRES_PASSWORD"),
            'HOST': "db",
            'PORT': 5432
        }
    }

    SOCIAL_AUTH_POSTGRES_JSONFIELD = True

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = "forgyftapp.User"

AUTHENTICATION_BACKENDS = (
    # 'social_core.backends.github.GithubOAuth2',  # Github
    'social_core.backends.amazon.AmazonOAuth2', # Amazon
    'social_core.backends.twitter.TwitterOAuth',  # Twitter
    'social_core.backends.open_id.OpenIdAuth',  # Google
    'social_core.backends.google.GoogleOpenId',  # Google
    'social_core.backends.google.GoogleOAuth2',  # Google
    # 'social_core.backends.slack.SlackOAuth2',  # Slack

    'django.contrib.auth.backends.AllowAllUsersModelBackend',
)

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

if not DEBUG:
    BUGSNAG = {
        'api_key': '***REMOVED***',
    }

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(PROJECT_ROOT, 'staticfiles')

AWS_STORAGE_BUCKET_NAME = 'forgyft-media'
AWS_S3_REGION_NAME = 'us-west-2'  # e.g. us-east-2
AWS_AUTO_CREATE_BUCKET = True
AWS_ACCESS_KEY_ID = os.getenv("AWS_ACCESS_KEY_ID")
AWS_SECRET_ACCESS_KEY = os.getenv("AWS_SECRET_ACCESS_KEY")

# Tell django-storages the domain to use to refer to static files.
AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME

if not DEBUG:
    STATICFILES_STORAGE = 'forgyft.custom_storages.StaticStorage'
    AWS_S3_CUSTOM_DOMAIN = "***REMOVED***"

if DEBUG:
    MEDIAFILES_LOCATION = "media-debug"
    STATICFILES_LOCATION = "static-debug"
else:
    MEDIAFILES_LOCATION = "media"
    STATICFILES_LOCATION = "static"
DEFAULT_FILE_STORAGE = "forgyft.custom_storages.MediaStorage"